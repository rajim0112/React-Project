// import {BrowserRouter, Routes, Route} from 'react-router-dom';
// import React, { useEffect, useState } from 'react';
// import './App.css';
// import { EmployeeData } from './CRUD-Task/EmployeeData';
// import Window from './Card/Window';
// import Mapper from './Card/Mapper';
// import Resize from './Card/Resize';
// import FormHandler from './Card/FormHandler';
// import Img from './Card/Img';
// import NotFound from './Card/NotFound';
// import Form from './Card/Form';
// import NavBar from './Card/NavBar';
// import Name from './Card/Name';
// import Crud from './CRUD-Task/CrudOperations';
// import Card2 from './Card/Card2';
// import Increment from './Card/Increment';
// import DetailsCard from './Card/DetailsCard';
// import CrudTask from './CRUD-Task/CrudTask';
// ************************************************
// import MeghanaCard from './Card/MeghanaCard';
// import RajiCard from './Card/RajiCard';
// ************************************************
// related to Navbar.jsx , App.css
// import Navbar  from './container/Navbar/Navbar';

// related to Hero.jsx , Hero.css
// import Hero from './container/Hero/Hero';

// related to About.jsx , About.css
// import About from './container/About/About';
// **************************************
// import Class1 from './Basics/Class1';
// import Class2 from './Basics/Class2';
// import Class3 from './Basics/Class3';
// import Class4 from './Basics/Class4';
// import Class5 from './Basics/Class5';
// ******************************************
// related to Hello.js, App.css
// import Hello from './Hello';

// related to Hello.jsx , style.css
// import Hello from './container/Hello';

// ***************************************************

function App() {

  // console.log(window.location);
  // const path = window.location.pathname
  // console.log(path);
  // if (path === '/') {
  //   return (
  //     <Img/>
  //   )
  // }
  // if (path === '/login') {
  //   return (<FormHandler/>)
  // }
  // if(path === '/modes') {
  //   return (<Window/>)
  // } else {
  //   window.location.href = 'http://localhost:3000/'
  // }
  // const routes = [
  //   {
  //     path: '/',
  //     element: <Form/>
  //   },
  //   {
  //     path: '/login',
  //     element: <FormHandler/>
  //   },
  //   {
  //     path: '/modes',
  //     element: <Window/>

  //   }
  // ]
  return (
    <>
    </>
  );
}
export default App;

********************************CrudTask-> code program write in app.js only******************

import './App.css';
import React, { useEffect, useState } from 'react';
import {EmployeeData}  from './CRUD-Task/EmployeeData';
function App() {

  const [data, setData] = useState([]);
  const [firstName, setFirstName] = useState('')
  const [lastName, setLastName] = useState('')
  const [age, setAge] = useState(0)
  const [id, setId] = useState(0)
  const [isUpdate, setIsUpdate] = useState(false)

  useEffect(() => {
    setData(EmployeeData)
  }, []);

  const handleEdit = (id) => {
    const dt = data.filter(item => item.id === id);
    if(dt !== undefined) 
      {
        setIsUpdate(true);
        setId(id);
        setFirstName(dt[0].firstName);
        setLastName(dt[0].lastName);
        setAge(dt[0].age);
      }
  }

  const handleDelete = (id) => { 
    if(id > 0) {
      if (window.confirm("Are you sure to delete this item?")) {
        const dt = data.filter(item => item.id !== id);
        setData(dt);
      }
    }
  }

  const handleSave = (e) => {
    let error = '' ;

    if(firstName === '')
      error += 'First name is required,';
    if(lastName === '')
      error += 'Last name is required,';
    if(age <= 0)
      error += 'Age is required,';

    if(error === '') {

      // e.preventDefault();
      const dt = [...data];
      const newObject = {
        id : EmployeeData.length + 1,
        firstName : firstName,
        lastName : lastName,
        age : age
      }
      dt.push(newObject);
      setData(dt);
    } 
    else {
      alert(error)
    }
  }

  const handleUpdate = () => {
    const index = data.map((item) => {
      return item.id
    }).indexOf(id);

    const dt = [...data];
    dt[index].firstName = firstName;
    dt[index].lastName = lastName;
    dt[index].age = age;

    setData(dt);
    handleClear();
  }

  const handleClear = () => {
    setId(0);
    setFirstName('');
    setLastName('');
    setAge('');
    setIsUpdate(false);            
  }

  return (
    <div className="App">

      <h2>CRUD OPERATIONS</h2><br></br>

      <div style={{display: 'flex', justifyContent:'center', marginTop:"10px", marginBottom:"10px"}}>
        <div>
          <label>First Name : 
            <input type='text' placeholder='Enter First Name' onChange={(e) => setFirstName(e.target.value)} value={firstName}/>
          </label>
        </div>
        <div>
          <label>Last Name :
            <input type='text' placeholder='Enter Last Name' onChange={(e) => setLastName(e.target.value)} value={lastName}/>
          </label>
        </div>
        <div>
          <label>Age :
            <input type='number' placeholder='Enter your Age' onChange={(e) => setAge(e.target.value)} value={age}/>
          </label>
        </div>
        <div>
          {
            !isUpdate ?
            <button className='btn btn-primary' onClick={(e) => handleSave()}>Save</button>
            :
            <button className='btn btn-primary' onClick={() => handleUpdate()}>Update</button>
          }
          <button className='btn btn-danger' onClick={() => handleClear()}>Clear</button>
        </div>
      </div><br></br>

      <table className='table table-hover'>
        <thead>
          <tr>
            <td>SI.No</td>
            <td>Id</td>
            <td>First Name</td>
            <td>Last Name</td>
            <td>Age</td>
            <td>Actions</td>
          </tr>
        </thead>
        <tbody>
          {
            data.map((item, index) => {
              return(
                <tr key={index}>
                  <td>{index+ 1}</td>
                  <td>{item.id}</td>
                  <td>{item.firstName}</td>
                  <td>{item.lastName}</td>
                  <td>{item.age}</td>
                  <td>
                    <button className='btn btn-primary' onClick={() => handleEdit(item.id)} >Edit</button>&nbsp;
                    <button className='btn btn-danger' onClick={() => handleDelete(item.id)}>Delete</button>
                  </td>
                </tr>
              )
            })
          }
        </tbody>
      </table>
    </div>
  );
}
export default App;

*************************CURD AXIOS************************
// *************App.js code***********

import React, { useState } from 'react';
import axios from 'axios';

const App = () => {
    const [formData, setFormData] = useState({ name: '', job: '' });
    const [users, setUsers] = useState([]);

    // Handle input changes for form
    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData({ ...formData, [name]: value });
    };

    // POST Request - Create a user
    const handlePost = async () => {
        try {
            const res = await axios.post('https://reqres.in/api/users', formData);
            console.log('POST Response:', res.data);
            alert(`User Created: ${JSON.stringify(res.data)}`);
        } catch (err) {
            console.error('POST Error:', err);
        }
    };

    // GET Request - Fetch users
    const handleGet = async () => {
        try {
            const res = await axios.get('https://reqres.in/api/users?page=2');
            setUsers(res.data.data);
            console.log('GET Response:', res.data);
        } catch (err) {
            console.error('GET Error:', err);
        }
    };

    // PUT Request - Update user
    const handlePut = async () => {
        const updatedData = { name: 'Updated Name', job: 'Updated Job' };
        try {
            const res = await axios.put('https://reqres.in/api/users/2', updatedData);
            console.log('PUT Response:', res.data);
            alert(`User Updated: ${JSON.stringify(res.data)}`);
        } catch (err) {
            console.error('PUT Error:', err);
        }
    };

    // DELETE Request - Delete user
    const handleDelete = async () => {
        try {
            const res = await axios.delete('https://reqres.in/api/users/2');
            console.log('DELETE Response:', res.status);
            alert(`User Deleted: Status ${res.status}`);
        } catch (err) {
            console.error('DELETE Error:', err);
        }
    };

    return (
        <div style={{ padding: '20px' }}>
            <h1>Axios CRUD Operations</h1>

            {/* Form for POST request */}
            <div>
                <h2>Create User</h2>
                <input
                    type="text"
                    name="name"
                    placeholder="Name"
                    value={formData.name}
                    onChange={handleInputChange}
                />
                <input
                    type="text"
                    name="job"
                    placeholder="Job"
                    value={formData.job}
                    onChange={handleInputChange}
                />
                <button onClick={handlePost}>Create User</button>
            </div>

            {/* Button for GET request */}
            <div>
                <h2>Get Users</h2>
                <button onClick={handleGet}>Fetch Users</button>
                <ul>
                    {users.map((user) => (
                        <li key={user.id}>
                            {user.first_name} {user.last_name}
                        </li>
                    ))}
                </ul>
            </div>

            {/* Buttons for PUT and DELETE */}
            <div>
                <h2>Update and Delete User</h2>
                <button onClick={handlePut}>Update User</button>
                <button onClick={handleDelete}>Delete User</button>
            </div>
        </div>
    );
};

export default App;

// **************index.html code**********

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="theme-color" content="#000000" />
    <meta name="description" content="A React app demonstrating CRUD operations with Axios">
    <title>Axios CRUD Demo</title>
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <script src="https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js" crossorigin></script>
  
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>

// ************App.css code**************

/* body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f9f9f9;
  color: #333;
}

h1, h2 {
  color: #444;
}

div {
  margin-bottom: 20px;
}

input {
  padding: 10px;
  margin-right: 10px;
  border: 1px solid #ccc;
  border-radius: 4px;
}
button {
  padding: 10px 20px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

button:hover {
  background-color: #0056b3;
}

ul {
  list-style-type: none;
  padding: 0;
}

li {
  margin: 5px 0;
} */

// ***************index.js code************

import React from 'react';
import ReactDOM from 'react-dom';
import './index.css'; 
import App from './App';

ReactDOM.render(
    <React.StrictMode>
        <App />
    </React.StrictMode>,
    document.getElementById('root')
);

// ***************index.css code***********

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: #f0f0f0;
  line-height: 1.6;
  font-size: 16px;
  color: #333;
  padding: 20px;
}

 ******************************************************
import React from 'react';
import './App.css';
import { BrowserRouter, Form, Route, Routes } from 'react-router-dom';
import NavBar from './Card/NavBar';
// import Form from './Card/Form';
// import FormHandler from './Card/FormHandler';
// import Window from './Card/Window';
// import Modal from './Card/Modal';
// import Mapper from './Card/Mapper';
// import Name from './Card/Name';
// import NotFound from './Card/NotFound';

const App = () => {

    return (
      <>
      <NavBar/>
      <BrowserRouter>
      <Routes>
        <Route path='/' element={<Form/>}/>
        <Route path='/login' element={<FormHandler/>}/>
        <Route path='/modes' element={<Window/>}/>
        <Route path='/modal' element={<Modal/>}/>
        <Route path='/data' element={<Mapper/>}/>
        <Route path='/user/:id' element={<Name/>}/>
        <Route path='*' element={<NotFound/>}/>
      </Routes>
      </BrowserRouter>
      </>
    );
};

export default App;